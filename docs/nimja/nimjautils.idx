Loop	nimja/nimjautils.html#Loop	nimjautils: Loop	
Loopable	nimja/nimjautils.html#Loopable	nimjautils: Loopable	
allowedCharsInSlug	nimja/nimjautils.html#allowedCharsInSlug	nimjautils: allowedCharsInSlug	
cycle	nimja/nimjautils.html#cycle,Loop,openArray[T]	nimjautils: cycle[T](loop: Loop; elems: openArray[T]): T	
loop	nimja/nimjautils.html#loop.i,openArray[T]	nimjautils: loop[T](a: openArray[T]): tuple[loop: Loop[T], val: T]	
`~`	nimja/nimjautils.html#~.t,untyped,untyped	nimjautils: `~`(aa, bb: untyped): string	
includeRaw	nimja/nimjautils.html#includeRaw,string	nimjautils: includeRaw(path: string): string	
includeRawStatic	nimja/nimjautils.html#includeRawStatic,staticstring	nimjautils: includeRawStatic(path: static string): string	
includeStaticAsDataurl	nimja/nimjautils.html#includeStaticAsDataurl,staticstring,staticstring	nimjautils: includeStaticAsDataurl(path: static string; mimeOverride: static string = &quot;&quot;): string	
truncate	nimja/nimjautils.html#truncate,string,Natural,string	nimjautils: truncate(str: string; num: Natural; preserveWords = true; suf = &quot;...&quot;): string	
nl2br	nimja/nimjautils.html#nl2br,string	nimjautils: nl2br(str: string; keepNl = true): string	
spaceless	nimja/nimjautils.html#spaceless,string	nimjautils: spaceless(str: string): string	
slugify	nimja/nimjautils.html#slugify,string,string	nimjautils: slugify(str: string; sperator = &quot;-&quot;; allowedChars = allowedCharsInSlug): string	
`?`	nimja/nimjautils.html#?.t,untyped,untyped	nimjautils: `?`(con, body: untyped): untyped	
`|`	nimja/nimjautils.html#|.m,untyped,untyped	nimjautils: `|`(aa, bb: untyped): string	
